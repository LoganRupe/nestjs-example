# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
- master

pool: Default

stages:
- stage: PreInstall
  displayName: Pre-Install Stage
  jobs:
   - job: PreInstallJob
     displayName: Pre-Install
     steps:
      - task: DownloadSecureFile@1
        inputs:
          secureFile: '.env'
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Agent.TempDirectory)'
          Contents: '.env'
          TargetFolder: '$(Build.SourcesDirectory)'
          overWrite: true
- stage: Install
  displayName: Install Stage
  jobs:
   - job: InstallJob
     displayName: Install
     steps:
      - script: make install
        env: { CONTAINER_NAME_WORKER_SUFFIX: _d }
- stage: Build
  displayName: Build Stage
  jobs:
  - job: BuildJob
    displayName: Build
    steps:
    - script: make build
      env: { CONTAINER_NAME_WORKER_SUFFIX: _d }
- stage: Validation
  displayName: Validation Stage
  jobs:
  - job: LintJob
    displayName: Lint
    steps:
    - script: make lint
      env: { CONTAINER_NAME_WORKER_SUFFIX: _d }
  - job: AuditJob
    displayName: Audit
    dependsOn: []
    steps:
    - script: make audit
      env: { CONTAINER_NAME_WORKER_SUFFIX: _d }
  - job: TestJob
    displayName: Test (Unit Tests)
    dependsOn: []
    steps:
    - script: make test
      env: { CONTAINER_NAME_WORKER_SUFFIX: _d }
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: '**/junit.xml'
    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'